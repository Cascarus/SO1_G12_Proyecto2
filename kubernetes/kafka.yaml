apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: api-kafka-deployment
  name: api-kafka-deployment
  namespace: squidgame
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-kafka-deployment
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: api-kafka-deployment
      annotations:
        linkerd.io/inject: enabled
    spec:
      hostname: server-kafka
      containers:
      - name: api-kafka-server
        image: efraalv/kafka-publisher
        ports:
          - containerPort: 3000
      - name: api-kafka-client
        image: efraalv/kafka-subscriber
        ports:
          - containerPort: 3001
      - name: kafka-service
        image: confluentinc/cp-kafka:latest
        env:
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "localhost:2181"
          - name: KAFKA_ADVERTISED_LISTENERS
            value: "PLAINTEXT://localhost:9092"
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: "PLAINTEXT:PLAINTEXT"
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: "PLAINTEXT"
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "1"
          - name: LOG_CLEANER_DELETE_RETENTION_MS
            value: "120000"
        ports:
          - containerPort: 9092
      - name: zookeeper
        image: confluentinc/cp-zookeeper:latest
        env:
          - name: ZOOKEEPER_CLIENT_PORT
            value: "2181"
          - name: ZOOKEEPER_TICK_TIME
            value: "2000"
        ports:
          - containerPort: 2181
        
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: api-kafka-deployment
  name: api-kafka-deployment
  namespace: squidgame
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: api-kafka-deployment
  type: ClusterIP